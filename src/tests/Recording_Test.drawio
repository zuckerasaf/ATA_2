<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36" version="27.0.9">
  <diagram name="Page-1" id="gx9healEwXHTnKMPEHd8">
    <mxGraphModel dx="2208" dy="748" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="0uebhjib72tp26NV08e5-54" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-12" target="0uebhjib72tp26NV08e5-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-12" value="get control panel dimension from config &#xa; dialog_config = self.config.get_Test_Name_Dialog_config()" style="shape=parallelogram;strokeWidth=2;perimeter=parallelogramPerimeter;whiteSpace=wrap;rounded=1;arcSize=12;size=0.10714285714285784;" vertex="1" parent="1">
          <mxGeometry x="630" y="165" width="400" height="85" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-16" value="Start recording a new test&#xa;def start_recording(self)&#xa;" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;fontColor=default;fillColor=default;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="104" y="268.5" width="380" height="681.5" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-39" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-38" target="0uebhjib72tp26NV08e5-48">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="305.0410526315792" y="220" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-38" value="Main Gui Form&amp;nbsp;" style="strokeWidth=2;html=1;shape=mxgraph.flowchart.start_1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="222.87" y="50" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-55" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-48" target="0uebhjib72tp26NV08e5-16">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="278.13" y="320" as="sourcePoint" />
            <mxPoint x="273.13" y="360" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-48" value="Press the Record button&#xa;&#xa;self.create_control_buttons_frame()&#xa;ttk.Button(frame, text=&quot;Record&quot;, command=self.start_recording)&#xa;" style="strokeWidth=2;shape=mxgraph.flowchart.start_1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="90" y="140" width="430" height="110" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-77" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-50" target="0uebhjib72tp26NV08e5-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-50" value="try to kill any existing listener&#xa;self.killOldListener()" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="150" y="290" width="320" height="50" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-56" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-51" target="0uebhjib72tp26NV08e5-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-79" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-51" target="0uebhjib72tp26NV08e5-63">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-51" value="Show the test name dialog and wait to get the data &#xa;&#xa; dialog = TestNameDialog()" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="150.13" y="375" width="320" height="55" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-52" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="1060" y="205.81" width="412.87" height="535.39" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-57" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-53" target="0uebhjib72tp26NV08e5-52">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-53" value="open the Test name forn GUI &#xa;class TestNameDialog&#xa;&#xa;from user get :&#xa;Test name - String &#xa;Purpose - String &#xa;Accuracy level- Number (1-10)&#xa;Starting point - Enumeration points " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="570" y="396" width="250" height="155" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-60" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-53">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="610" y="375" as="sourcePoint" />
            <mxPoint x="380" y="100" as="targetPoint" />
            <Array as="points">
              <mxPoint x="632" y="335" />
              <mxPoint x="570" y="335" />
              <mxPoint x="570" y="80" />
              <mxPoint x="460" y="80" />
              <mxPoint x="460" y="100" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-61" value="Cancel Button" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-60">
          <mxGeometry x="-0.5099" y="-6" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-78" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-63" target="0uebhjib72tp26NV08e5-66">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-63" value="Create test directory for later use according to  &quot;Test name&quot;" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;dashed=1;dashPattern=8 8;" vertex="1" parent="1">
          <mxGeometry x="150" y="461" width="320" height="40" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-64" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;endArrow=none;startFill=1;startArrow=classic;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-63" target="0uebhjib72tp26NV08e5-53">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="480" y="480" as="sourcePoint" />
            <mxPoint x="560" y="345" as="targetPoint" />
            <Array as="points">
              <mxPoint x="490" y="481" />
              <mxPoint x="520" y="480" />
              <mxPoint x="550" y="480" />
              <mxPoint x="550" y="512" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-65" value="OK button&amp;nbsp;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-64">
          <mxGeometry x="-0.5099" y="-6" relative="1" as="geometry">
            <mxPoint x="35" y="-42" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-76" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-66" target="0uebhjib72tp26NV08e5-68">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-66" value="check if its Multiwindow state (config)&#xa;True - will eliminate the Main GUI &#xa;False (default) - do nothing " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;dashed=1;dashPattern=8 8;" vertex="1" parent="1">
          <mxGeometry x="152" y="561" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-72" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-68" target="0uebhjib72tp26NV08e5-69">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="360" y="655.0000000000002" as="sourcePoint" />
            <mxPoint x="590" y="655.0000000000002" as="targetPoint" />
            <Array as="points">
              <mxPoint x="530" y="674" />
              <mxPoint x="530" y="700" />
              <mxPoint x="590" y="700" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-74" value="Stating point&amp;nbsp;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-72">
          <mxGeometry x="-0.0339" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-144" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-68" target="0uebhjib72tp26NV08e5-143">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-68" value="GO to Stating Point&#xa;go_to_starting_point(starting_point)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="152.13" y="658.5" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-69" value="GO to Stating Point (Desktop, googleap, none...)&#xa;def go_to_starting_point(point_name)&#xa;&#xa;use function &#xa;def minimize_all_windows() for go to desktop" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="590" y="685" width="250" height="120" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-73" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=1;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-69" target="0uebhjib72tp26NV08e5-68">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="410" y="695" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-75" value="True \ False&amp;nbsp;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-73">
          <mxGeometry x="-0.1955" y="-6" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-146" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-80" target="0uebhjib72tp26NV08e5-82">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-80" value="Start Recording&#xa;start_recording(test_name, starting_point)&#xa;" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="153.13" y="873.5" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-82" value="Main function to start the event&#xa; RecordTest.Py &#xa;main(test_name=None, starting_point=&quot;none&quot;)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="-680" y="680" width="460" height="950" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-94" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-83" target="0uebhjib72tp26NV08e5-84">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-83" value="called when the program exits, ensuring the lock file is removed&#xa;register_cleanup(lock_file)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-600" y="750" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-95" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-84" target="0uebhjib72tp26NV08e5-85">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-84" value="Close any existing mouse listener threads&#xa;close_existing_mouse_threads()" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-600" y="840" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-97" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-85" target="0uebhjib72tp26NV08e5-96">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-85" value="Create the floating window with test name&#xa;EventWindow(test_name=test_name)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-600" y="933.5" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-86" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="-816.46" y="40" width="391.73" height="58" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-88" value="This module provides a floating window to display event data during test execution.&#xa;It includes an EventWindow class that updates the&#xa; displayed event information and handles window dragging.&#xa;&#xa;for update the data on the Event Window we use:&#xa;update_event(self, event):&#xa;&#xa;in case press the X the App will terminate use:&#xa;# Close any existing mouse listener threadsclose_existing_mouse_threads()&#xa;&#xa;# Terminate running instance using process_util&#xa;terminate_running_instance(&quot;cursor_listener.lock&quot;) " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-730" y="220" width="300" height="240" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-91" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-89" target="0uebhjib72tp26NV08e5-88">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-89" value="get event panel dimension from config &#xa;        config = Config()&#xa;" style="shape=parallelogram;strokeWidth=2;perimeter=parallelogramPerimeter;whiteSpace=wrap;rounded=1;arcSize=12;size=0.10714285714285784;" vertex="1" parent="1">
          <mxGeometry x="-734.13" y="130" width="308.27" height="50" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-92" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.073;entryY=0.913;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-88" target="0uebhjib72tp26NV08e5-86">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-93" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-85" target="0uebhjib72tp26NV08e5-88">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-655" y="580" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-105" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-96" target="0uebhjib72tp26NV08e5-102">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-96" value="Create the event listener&#xa;listener =EventListener(event_window, test_name, starting_point)&#xa;&#xa;    This class captures mouse movements, clicks, keyboard presses, and &#xa;scroll events,&#xa;    and updates a floating event window with the recorded events." style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="-640" y="1040" width="397" height="110" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-99" value=" Handle mouse click events, including drag operations.&#xa;on_click(self, x, y, button, pressed)&#xa;&#xa;handle the distance &gt; config.get_track_drag_threshold():&#xa;If moved more than 5 pixels, consider it a drag&#xa;&#xa;for every mouse press and release or drag release the function will create &quot;event&quot; and:&#xa; add it to Test Object  - self.current_test.add_event(event)&#xa;Update the floating window event_window.update_event(event)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="67" y="975" width="467" height="170" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-100" value="Track mouse movement during drag operations&#xa;on_move(self, x, y)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="67" y="1175" width="454" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-101" value=" Handle keyboard press events.&#xa;def on_press(self, key)&#xa;&#xa;for every keyboard press the function will create &quot;event&quot; and:&#xa; add it to Test Object  - self.current_test.add_event(event)&#xa;Update the floating window event_window.update_event(event)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="-50" y="1276" width="760" height="900" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-106" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-102" target="0uebhjib72tp26NV08e5-103">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-108" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-102" target="0uebhjib72tp26NV08e5-100">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-120" y="1265" />
              <mxPoint x="-120" y="1205" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-102" value="    Start the mouse listener&#xa;    mouse_listener = mouse.Listener( &#xa; on_click=listener.on_click,&#xa;        on_move=listener.on_move,  &#xa;        on_scroll=listener.on_scroll)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-602" y="1200" width="320" height="90" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-109" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.002;entryY=0.029;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-103" target="0uebhjib72tp26NV08e5-101">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-80" y="1320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-103" value="Start the keyboard listener &#xa; keyboard_listener = keyboard.Listener(&#xa;        on_press=listener.on_press )" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-602" y="1350" width="320" height="70" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-104" value="Stop the listeners " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-601.5" y="1500" width="320" height="70" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-107" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-102" target="0uebhjib72tp26NV08e5-99">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-559.9933333333333" y="1237.82" as="sourcePoint" />
            <mxPoint x="-22.92799999999994" y="1069.9999999999998" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-120" y="1265" />
              <mxPoint x="-120" y="1128" />
              <mxPoint x="-23" y="1128" />
              <mxPoint x="-23" y="1060" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-112" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-110" target="0uebhjib72tp26NV08e5-116">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="377" y="1465.9259259259256" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-113" value="True" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-112">
          <mxGeometry x="0.459" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-114" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;endArrow=oval;endFill=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-110">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="17.000000000000227" y="1465.9259259259256" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-115" value="False" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-114">
          <mxGeometry x="-0.0132" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-130" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-110" target="0uebhjib72tp26NV08e5-129">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-110" value="if the key was :&#xa;print_screen_key" style="strokeWidth=2;shape=mxgraph.flowchart.decision;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="60.5" y="1408" width="170" height="110" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-125" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-116" target="0uebhjib72tp26NV08e5-117">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-116" value="&#xa;stop the saving of the listener data while deal with the snapshot for every &#xa; self.save = False" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="330" y="1428" width="340" height="70" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-122" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-117">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="760" y="1506" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-126" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-117" target="0uebhjib72tp26NV08e5-124">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-117" value="# Create dialog and wait for it&#xa;ScreenshotDialog(self.screenshot_counter) &#xa;" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="330" y="1541" width="340" height="65" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-118" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="1140" y="840" width="407" height="587" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-123" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-119" target="0uebhjib72tp26NV08e5-118">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-119" value="This module provides a dialog for configuring screenshot event data, including priority, image name,&#xa;Print Screen window configuration, step description, and step acceptance criteria.&#xa;&#xa;for update the data on the Event Window we use:&#xa;update_event(self, event):&#xa;&#xa;in case press the X the App will terminate use:&#xa;# Close any existing mouse listener threadsclose_existing_mouse_threads()&#xa;&#xa;# Terminate running instance using process_util&#xa;terminate_running_instance(&quot;cursor_listener.lock&quot;) " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="760" y="1410" width="300" height="240" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-121" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-120" target="0uebhjib72tp26NV08e5-119">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-120" value="get event panel dimension and default parameters &#xa;from config &#xa;self.config.get(&#39;Screenshot_Dialog&#39;, {})" style="shape=parallelogram;strokeWidth=2;perimeter=parallelogramPerimeter;whiteSpace=wrap;rounded=1;arcSize=12;size=0.10714285714285784;" vertex="1" parent="1">
          <mxGeometry x="740" y="1210" width="308.27" height="85" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-128" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-124" target="0uebhjib72tp26NV08e5-127">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-124" value="Generate screenshot filename with test name and picture dimention + location from the screen shot configuration form &#xa;save it in the Test folder&#xa;&#xa;screenshot = capture_screen(event.pic_x, event.pic_y, event.pic_width, event.pic_height)  &#xa;:&#xa;generate_screenshot_filename(self.test_name, self.screenshot_counter, dialog.result[&#39;image_name&#39;],&quot;Recording&quot;,&quot;none&quot;)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="327" y="1646" width="347" height="190" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-127" value="calculate the time in &quot;pause&quot; while the screen shoot dialog is open (for update the event data)&#xa;&#xa;restart the saving of the listener data  and update the event data with the picture configuration " style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="325.5" y="1876" width="350" height="120" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-135" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-129" target="0uebhjib72tp26NV08e5-134">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-136" value="True" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-135">
          <mxGeometry x="-0.2808" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-129" value="if the key was :&#xa;quit_key" style="strokeWidth=2;shape=mxgraph.flowchart.decision;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="59.87" y="2040" width="170" height="110" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-132" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;endArrow=oval;endFill=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-129">
          <mxGeometry relative="1" as="geometry">
            <mxPoint y="2101" as="targetPoint" />
            <mxPoint x="43.99999999999977" y="1506.0740740740744" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-133" value="False" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="0uebhjib72tp26NV08e5-132">
          <mxGeometry x="-0.0132" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-138" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-134" target="0uebhjib72tp26NV08e5-137">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-140" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-134" target="0uebhjib72tp26NV08e5-139">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-134" value="Save the test data using the imported save_test function&#xa;filepath = save_test(self.current_test, self.test_name, &quot;recording&quot;)&#xa;&#xa;Schedule window destruction and control panel restart in the main thread&#xa;self.event_window.after(0, lambda: cleanup_and_restart(self.event_window))" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="327" y="2036" width="340" height="120" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-148" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-137" target="0uebhjib72tp26NV08e5-147">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-137" value="    Save the test data to a file.&#xa;    This function saves the test data to a JSON file, either in the result directory or the test directory,&#xa;&#xa;save_test(test, test_name=None, state=&quot;running&quot;, result_folder_path=None): &#xa;" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="850" y="1910" width="340" height="130" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-139" value="This function deletes the lock file, destroys the event window, and restarts the control panel.&#xa;&#xa;cleanup_and_restart(event_window, lock_file=&quot;cursor_listener.lock&quot;)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="850" y="2060" width="340" height="120" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-141" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-139" target="0uebhjib72tp26NV08e5-38">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1620" y="2120" />
              <mxPoint x="1620" y="30" />
              <mxPoint x="303" y="30" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-145" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="0uebhjib72tp26NV08e5-143" target="0uebhjib72tp26NV08e5-80">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-143" value="close the Control Panel window &#xa;self.root.destroy()" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;dashed=1;dashPattern=8 8;" vertex="1" parent="1">
          <mxGeometry x="151.5" y="770" width="317" height="60" as="geometry" />
        </mxCell>
        <mxCell id="0uebhjib72tp26NV08e5-147" value=" This function loads test data from a JSON file and generates a Word (.docx) document summarizing the test,&#xa;    including a summary table of steps and optionally embedding images for each step&#xa;&#xa;create_doc_from_json(result_file, DocPictures, Doctype)" style="rounded=1;whiteSpace=wrap;absoluteArcSize=1;arcSize=14;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="850" y="1720" width="340" height="126" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
